#!/bin/sh

diskdir=/.disk

detect_hostname () {
  hostname=$(prtconf -v /devices 2>/dev/null | sed -n '/hostname/{;n;p;}' | cut -f 2 -d \')
  if [[ $hostname ]]; then
    echo "INFO: Hostname: ${hostname}"
    /usr/bin/hostname ${hostname}
  else
    echo "ERROR: No se pudo detectar el hostname en los argumentos de GRUB"
    exit 1
  fi
}

detect_disk () {
  disk=$(echo '' | /usr/sbin/format 2>/dev/null | awk '/0\./ {print $2}')
  if [[ $disk ]]; then
    echo "INFO: Dispositivo de disco: ${disk}"
    return 0
  else
    echo "WARN: Dispositivo de disco no detectado"
    return 1
  fi
}

detect_network () {
  interface=$(awk '/e1000g|ife|iprb/ {print $NF}' /etc/path_to_inst | sed 's/"//g')
  interface0=${interface}0
  if [[ $interface ]]; then
    echo "INFO: Dispositivo de red: ${interface0}"
  else
    echo "ERROR: Dispositivo de red no detectado o no soportado"
    exit 1
  fi
}

detect_ipaddress () {
  ipaddress_grub=$(prtconf -v /devices 2>/dev/null | sed -n '/ipaddress/{;n;p;}' | cut -f 2 -d \')
  if [[ $ipaddress_grub ]]; then
    dhcp=''
    ipaddress=${ipaddress_grub}
    gateway="${ipaddress_grub%.*}.1"
    echo "INFO: Direccion IP estatica: ${ipaddress}"
    return 0
  else
    dhcp=true
    echo "WARN: Sin direccion estatica. Se intenta por DHCP"
    return 1
  fi
}

config_network () {
  env SMF_FMRI=svc/net/ip:d /lib/inet/ipmgmtd

  /sbin/ifconfig lo0 plumb 127.0.0.1 up
  /sbin/ifconfig ${interface0} plumb

  if [[ $dhcp ]]; then
    /sbin/ifconfig ${interface0} auto-dhcp primary
  else
    /sbin/ifconfig ${interface0} ${ipaddress} plumb up
    /sbin/route add default ${gateway}
  fi
}

create_dir () {
  mkdir ${diskdir}
  mkdir -p /home/metro
}

mount_diskless () {
  /usr/sbin/mount -F tmpfs swap ${diskdir}
  /usr/sbin/mount -F tmpfs swap /home/metro
  cp /metadata.json ${diskdir}/metadata.json
}

check_disk () {
  echo "INFO: Comprobando el estado del disco"
  if /usr/sbin/mount /dev/dsk/${disk}s0 ${diskdir} 2>/dev/null; then
    if [[ ! -f ${diskdir}/metadata.json ]]; then
      echo "WARN: No existe fichero de metadatos"
      /sbin/umount ${diskdir}
      return 1
    fi
    if [[ ! -f ${diskdir}/persistence.ufs ]]; then
      echo "WARN: No existe fichero de persistencia"
      /sbin/umount ${diskdir}
      return 1
    fi
    if [[ ! -f ${diskdir}/swap1 ]]; then
      echo "WARN: No existe fichero de swap"
      /sbin/umount ${diskdir} 
      return 1
    fi
    /sbin/umount ${diskdir}
  else
    echo "WARN: No se puede montar el disco"
    return 1
  fi
}

mount_disk () {
  /usr/sbin/mount /dev/dsk/${disk}s0 ${diskdir}
  /usr/sbin/lofiadm -a ${diskdir}/persistence.ufs > /dev/null
  /usr/sbin/mount /dev/lofi/1 /home/metro
  /usr/sbin/swap -a ${diskdir}/swap1
  /usr/sbin/swap -a ${diskdir}/swap2
}

prepare_disk () {
  echo "INFO: Preparando disco: Formateando"
  /root/format\-a\-disk.sh -B ${disk} >/dev/null 2>&1
  echo "y" | env NOINUSE_CHECK=1 /usr/sbin/newfs /dev/rdsk/${disk}s0 >/dev/null 2>&1
  /usr/sbin/mount /dev/dsk/${disk}s0 ${diskdir}
  cp -r /platform ${diskdir}/
  cp -r /boot ${diskdir}/
  echo '"boot_archive":nil' > ${diskdir}/metadata.json
  echo "INFO: Preparando disco: Creando fichero de persistencia"
  /usr/sbin/mkfile 4g ${diskdir}/persistence.ufs
  /usr/sbin/lofiadm -a ${diskdir}/persistence.ufs
  echo "y" | env NOINUSE_CHECK=1 /usr/sbin/newfs /dev/rlofi/1 >/dev/null 2>&1
  /usr/sbin/lofiadm -d ${diskdir}/persistence.ufs
  echo "INFO: Preparando disco: Creando fichero de swap"
  /usr/sbin/mkfile 1g ${diskdir}/swap1
  /usr/sbin/mkfile 1g ${diskdir}/swap2
  echo "INFO: Preparando disco: Instalando GRUB"
  cat > ${diskdir}/boot/grub/menu.lst << EOF
title Boot from disk
kernel\$ /platform/i86pc/kernel/unix -B hostname='${hostname}',ipaddress='${ipaddress}'
module\$ /platform/i86pc/boot_archive
EOF
  /sbin/installgrub -fm /boot/grub/stage1 /boot/grub/stage2 /dev/rdsk/${disk}s0 >/dev/null 2>&1
  /sbin/umount ${diskdir}
}

check_online () {
  echo "INFO: Comprobando conectividad"
  ping 16.0.96.20 5
}

update_app () {
  if ! diff /metadata.json ${diskdir}/metadata.json >/dev/null ; then
    echo "INFO: Actualizando version de boot_archive"
    /usr/bin/wget -q "http://16.0.96.20/repo/tce/boot_archive" -O ${diskdir}/platform/i86pc/boot_archive
    cp /metadata.json ${diskdir}/metadata.json
  fi
  echo "INFO: Descargando aplicacion"
  echo "INFO: Descargando configuracion"
  /usr/bin/wget -q "http://16.0.96.20/repo/tce-estacion/${hostname}/${hostname}.tar.gz" -O ${diskdir}/tce-config.tar.gz
}

check_app () {
  echo "INFO: Comprobando aplicacion"
  echo "INFO: Comprobando configuracion"
  if [[ ! -f ${diskdir}/tce-config.tar.gz ]]; then
    echo "ERROR: No hay configuracion en el disco y tampoco se puede obtener por red"
    exit 1
  fi  
}

deploy_app () {
  echo "INFO: Extrayendo aplicacion"
  echo "INFO: Extrayendo configuracion"
  /usr/gnu/bin/tar -C / -xzf ${diskdir}/tce-config.tar.gz
}

main () {

  /usr/sbin/devfsadm

  detect_hostname
  detect_network
  detect_ipaddress
  config_network
  create_dir
  if detect_disk; then
    while ! check_disk; do
      prepare_disk
    done
    mount_disk
  else
    mount_diskless
  fi
  if check_online; then
    update_app
  fi
  check_app
  deploy_app
}

main
